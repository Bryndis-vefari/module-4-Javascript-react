{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport getCurrentDayForecast from '../helpers/getCurrentDayForecast';\nimport getCurrentDayDetailedForecast from '../helpers/getCurrentDayDetailedForecast';\nimport getUpcomingDaysForecast from '../helpers/getUpcomingDaysForecast';\nconst BASE_URL = 'https://www.metaweather.com/api/location';\nconst CROSS_DOMAIN = 'https://the-ultimate-api-challenge.herokuapp.com';\nconst REQUEST_URL = `${CROSS_DOMAIN}/${BASE_URL}`;\n\nconst useForecast = () => {\n  _s();\n\n  const [isError, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  const getWoeid = async location => {\n    const {\n      data\n    } = await axios(`${REQUEST_URL}/search`, {\n      params: {\n        query: location\n      }\n    });\n\n    if (!data || data.length === 0) {\n      setError('There is no such location');\n      setLoading(false);\n      return;\n    }\n\n    return data[0];\n  };\n\n  const getForecastData = async woeid => {\n    const {\n      data\n    } = await axios(`${REQUEST_URL}/${woeid}`);\n\n    if (!data || data.length === 0) {\n      setError('Something went wrong');\n      setLoading(false);\n      return;\n    }\n\n    return data;\n  };\n\n  const gatherForecastData = data => {\n    const currentDay = getCurrentDayForecast(data.consolidated_weather[0], data.title);\n    const currentDayDetails = getCurrentDayDetailedForecast(data.consolidated_weather[0]);\n    const upcomingDays = getUpcomingDaysForecast(data.consolidated_weather);\n    setForecast({\n      currentDay,\n      currentDayDetails,\n      upcomingDays\n    });\n    setLoading(false);\n  };\n\n  const submitRequest = async location => {\n    setLoading(true);\n    setError(false);\n    const response = await getWoeid(location);\n    if (!(response === null || response === void 0 ? void 0 : response.woeid)) return;\n    const data = await getForecastData(response.woeid);\n    if (!data) return;\n    gatherForecastData(data);\n  };\n\n  return {\n    isError,\n    isLoading,\n    forecast,\n    submitRequest\n  };\n};\n\n_s(useForecast, \"98jJfAbkRG8B5Phem9UEdOko1FU=\");\n\nexport default useForecast;","map":{"version":3,"sources":["/Users/bibi/Documents/Vefskoli/Module-4/Module-4-Javascript-React/src/hooks/useForecast.js"],"names":["useState","axios","getCurrentDayForecast","getCurrentDayDetailedForecast","getUpcomingDaysForecast","BASE_URL","CROSS_DOMAIN","REQUEST_URL","useForecast","isError","setError","isLoading","setLoading","forecast","setForecast","getWoeid","location","data","params","query","length","getForecastData","woeid","gatherForecastData","currentDay","consolidated_weather","title","currentDayDetails","upcomingDays","submitRequest","response"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,6BAAP,MAA0C,0CAA1C;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,YAAY,GAAG,kDAArB;AACA,MAAMC,WAAW,GAAI,GAAED,YAAa,IAAGD,QAAS,EAAhD;;AAEA,MAAMG,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,UAAZ,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMe,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAE,GAAEM,WAAY,SAAhB,EAA0B;AAAEW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEH;AAAT;AAAV,KAA1B,CAA5B;;AAEA,QAAI,CAACC,IAAD,IAASA,IAAI,CAACG,MAAL,KAAgB,CAA7B,EAAgC;AAC5BV,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACH;;AAED,WAAOK,IAAI,CAAC,CAAD,CAAX;AACH,GAVD;;AAYA,QAAMI,eAAe,GAAG,MAAMC,KAAN,IAAe;AACnC,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAE,GAAEM,WAAY,IAAGe,KAAM,EAAzB,CAA5B;;AAEA,QAAI,CAACL,IAAD,IAASA,IAAI,CAACG,MAAL,KAAgB,CAA7B,EAAgC;AAC5BV,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACH;;AAED,WAAOK,IAAP;AACH,GAVD;;AAYA,QAAMM,kBAAkB,GAAGN,IAAI,IAAI;AAC/B,UAAMO,UAAU,GAAGtB,qBAAqB,CAACe,IAAI,CAACQ,oBAAL,CAA0B,CAA1B,CAAD,EAA+BR,IAAI,CAACS,KAApC,CAAxC;AACA,UAAMC,iBAAiB,GAAGxB,6BAA6B,CAACc,IAAI,CAACQ,oBAAL,CAA0B,CAA1B,CAAD,CAAvD;AACA,UAAMG,YAAY,GAAGxB,uBAAuB,CAACa,IAAI,CAACQ,oBAAN,CAA5C;AAEAX,IAAAA,WAAW,CAAC;AAAEU,MAAAA,UAAF;AAAcG,MAAAA,iBAAd;AAAiCC,MAAAA;AAAjC,KAAD,CAAX;AACAhB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAPD;;AASA,QAAMiB,aAAa,GAAG,MAAMb,QAAN,IAAkB;AACpCJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,UAAMoB,QAAQ,GAAG,MAAMf,QAAQ,CAACC,QAAD,CAA/B;AACA,QAAI,EAACc,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAER,KAAX,CAAJ,EAAsB;AAEtB,UAAML,IAAI,GAAG,MAAMI,eAAe,CAACS,QAAQ,CAACR,KAAV,CAAlC;AACA,QAAI,CAACL,IAAL,EAAW;AAEXM,IAAAA,kBAAkB,CAACN,IAAD,CAAlB;AACH,GAXD;;AAaA,SAAO;AACHR,IAAAA,OADG;AAEHE,IAAAA,SAFG;AAGHE,IAAAA,QAHG;AAIHgB,IAAAA;AAJG,GAAP;AAMH,CAzDD;;GAAMrB,W;;AA2DN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nimport getCurrentDayForecast from '../helpers/getCurrentDayForecast';\nimport getCurrentDayDetailedForecast from '../helpers/getCurrentDayDetailedForecast';\nimport getUpcomingDaysForecast from '../helpers/getUpcomingDaysForecast';\n\nconst BASE_URL = 'https://www.metaweather.com/api/location';\nconst CROSS_DOMAIN = 'https://the-ultimate-api-challenge.herokuapp.com';\nconst REQUEST_URL = `${CROSS_DOMAIN}/${BASE_URL}`;\n\nconst useForecast = () => {\n    const [isError, setError] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [forecast, setForecast] = useState(null);\n\n    const getWoeid = async location => {\n        const { data } = await axios(`${REQUEST_URL}/search`, { params: { query: location } });\n\n        if (!data || data.length === 0) {\n            setError('There is no such location');\n            setLoading(false);\n            return;\n        }\n\n        return data[0];\n    };\n\n    const getForecastData = async woeid => {\n        const { data } = await axios(`${REQUEST_URL}/${woeid}`);\n\n        if (!data || data.length === 0) {\n            setError('Something went wrong');\n            setLoading(false);\n            return;\n        }\n\n        return data;\n    };\n\n    const gatherForecastData = data => {\n        const currentDay = getCurrentDayForecast(data.consolidated_weather[0], data.title);\n        const currentDayDetails = getCurrentDayDetailedForecast(data.consolidated_weather[0]);\n        const upcomingDays = getUpcomingDaysForecast(data.consolidated_weather);\n\n        setForecast({ currentDay, currentDayDetails, upcomingDays });\n        setLoading(false);\n    };\n\n    const submitRequest = async location => {\n        setLoading(true);\n        setError(false);\n\n        const response = await getWoeid(location);\n        if (!response?.woeid) return;\n\n        const data = await getForecastData(response.woeid);\n        if (!data) return;\n\n        gatherForecastData(data);\n    };\n\n    return {\n        isError,\n        isLoading,\n        forecast,\n        submitRequest,\n    };\n};\n\nexport default useForecast;\n"]},"metadata":{},"sourceType":"module"}